<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
 <!-- 注解扫描包 ,  (以完成bean创建和自动依赖注入的功能)-->
    <context:component-scan base-package="com.lenovo.springmvc.*" >
        <!-- springMVC配置文件中将Service注解给去掉 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>


	<bean id="requestDecryptResponseEncryptBodyProcessorImpl"
		class="com.lenovo.springmvc.demo.controller.RequestDecryptBodyProcessorImpl" />

	<bean id="decryptEncryptFastJsonHttpMessageConverter"
		class="com.lenovo.springmvc.extend.DecryptEncryptMessageConverter"
		p:requestDecryptResponseEncryptBodyProcessor-ref="requestDecryptResponseEncryptBodyProcessorImpl" />


	<bean id="requestDecryptResponseEncryptBodyMethodProcessor"
		class="com.lenovo.springmvc.extend.RequestEncryptBodyMethodProcessor">
		<constructor-arg>
			<list>
				<ref bean="decryptEncryptFastJsonHttpMessageConverter" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="pathVDecryptMethodProcessor"
		class="com.lenovo.springmvc.extend.PathVariableDecryptMethodProcessor">
	</bean>
	<!-- 增加自定义mappinghadlerAdapter -->
    <bean id="handler"
		class="org.springframework.web.servlet.mvc.method.annotation.ExtendRequestMappingHadlerAdapter">
		<property name="synchronizeOnSession" value="true"/> 
		<property name="messageConverters">
			<list>
				<bean
					class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4" />
			</list>
		</property>
		<property name="customArgumentResolvers">
			<list>
				<ref bean="requestDecryptResponseEncryptBodyMethodProcessor" />
				<ref bean="pathVDecryptMethodProcessor" />
			</list>
		</property>
		<property name="customReturnValueHandlers">
			<list>
				<ref bean="requestDecryptResponseEncryptBodyMethodProcessor" />
			</list>
		</property>
	</bean> 
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean> 
	  <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- json转换器 -->
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>

</beans>
